## 4.6 Identity and Access Management 

---

### IAM (Identity and Access Management)

- Identity lifecycle management: every entity (human/non-human) gets a digital identity 
- Access control
- Authentication & Authorization
- Identity governance: track an entity's resource access

#### Provisioning / De-provisioning user accounts
- User account creation/removal
- Account details

#### Goal of IAM
1. **Permission assignments**
   - Each entity gets limited permissions (group assignments)
   - Private storage and files to that specific user
   - No privileged access to the OS
2. **Identity proofing**
   - Validation
   - Verification / Attestation

---

### SSO (Single Sign-On)
- Provide credentials once to gain access to multiple resources
- Usually time-limited (e.g., 24 hours, then re-authenticate)

---

### LDAP (Lightweight Directory Access Protocol)
- Protocol for reading and writing directories over an IP network
- X.500 specification written by ITU
- DAP originally ran on the OSI protocol stack  
  → LDAP is the protocol used to query/update an X.500 directory  
  (used in Windows Active Directory, Apple Open Directory, Novell eDirectory)

#### X.500 Distinguished Names
- Attribute = value pairs
- Most specific attribute is listed first  
  Example: `CN = widget web, OU = marketing, O = widget`

#### X.500 Directory Information Tree
- Hierarchical structure (tree)
  - Container objects: country, organization, org units
  - Leaf objects: users, computers, printers, files

---

### SAML (Security Assertion Markup Language)
- Open standard for authentication and authorization
- Allows authentication via a third-party with one standard
- **Cons**: not originally designed for mobile apps

---

### OAuth / OpenID Connect
- **OAuth**: Authorization framework (what resources a user can access)  
  *Not an authentication protocol*  
- **OpenID Connect**: Adds authentication (SSO), e.g. Google login

---

### Federation
- Provide network access across different organizations
- Third-party establishes a federated framework to authenticate & authorize  
  (e.g., Login with Facebook / Google / other apps)

#### Interoperability
- Often depends on environment
  - VPN concentrator talks to LDAP server
  - New app uses OAuth → need authentication API access
- Part of a larger IAM strategy

---

### Access Control Models

#### Mandatory Access Control (MAC)
- Used in highly secure areas
- OS limits operations based on **security clearance levels**
- Objects get labels → predefined rules
- Admin decides who gets what clearance
- Users cannot change settings

#### Discretionary Access Control (DAC)
- Used in most OSs
- **Owner controls access**
- Owner can modify permissions at any time
- Flexible but weaker security

#### Role-Based Access Control (RBAC)
- Based on user’s role in the organization
- Admin assigns access by role/group (e.g., Windows groups)

#### Rule-Based Access Control
- Access determined by system-enforced rules (not users)
- Rules tied to the object → system checks ACLs

#### Attribute-Based Access Control (ABAC)
- Access based on multiple criteria:
  - Resource info, IP address, time of day, desired action, etc.

##### Time-of-Day Restrictions
- Restrict access during specific times/days  
  Example: Room network inaccessible between midnight and 6 AM

---

### Least Privilege
- Rights and permissions should be **minimum required**
- All user accounts limited
- Apps should run with minimal privileges
- No administrative rights unless necessary

---

### Multifactor Authentication (MFA)

#### Implementations
- Biometrics
- Hard/soft tokens
- Security keys

#### Factors
- **Something you know**: password, PIN
- **Something you have**: smart card, hardware/software tokens, SMS code
- **Something you are**: biometrics (fingerprint, iris)
- **Somewhere you are**: location/IP address (usually IPv4)

---

### Password Concepts
- **Best practices**
  - Length: at least 8 characters
  - Complexity
  - No reuse
  - Expiration (30/60/90 days)
  - Age (password valid only for set time)
- **Password managers**
  - Store all passwords in one encrypted DB
  - Protected with MFA
  - Some are built into browsers
- **Passwordless authentication**
  - Example: facial recognition, security key

---

### Privileged Access Management (PAM)

#### Just-in-Time Permissions
- Grant admin access for a limited time
- Central system approves/denies based on policies

#### Password Vaulting
- Primary credentials stored in a secure vault
- Controls who can access them
- Accounts are temporary:
  - Just-in-time creates time-limited accounts
  - Admin receives **ephemeral credentials**
  - Primary passwords never revealed
  - Credentials used once, then deleted
